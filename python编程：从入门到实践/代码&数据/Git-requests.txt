# 调用API生成响应对象
import requests
url = r'https://api.github.com/search/repositories?q=language:python&sort=stars'
r = requests.get(url)
# 200表示响应成功
print("Status code:", r.status_code)

# 将响应存储在变量中
response_dict = r.json()
print(response_dict.keys())

# 研究第一个仓库
repo_dicts = response_dict['items']
repo_dict = repo_dicts[0]
i = 0
for key in sorted(repo_dict.keys()):
    i +=1
    #print(key)
i

print("\nSelected information about first repository:")
for reop_dict in repo_dicts:    
    print('\nName:', repo_dict['name'])
    print('Owner:', repo_dict['owner']['login'])
    print('Stars:', repo_dict['stargazers_count'])
    print('Repository:', repo_dict['html_url'])
    print('Created:', repo_dict['created_at'])
    print('Updated:', repo_dict['updated_at'])
    print('Description:', repo_dict['description'])

import pygal
from pygal.style import LightColorizedStyle as LCS, LightenStyle as LS

names, plot_dicts = [], []
for repo_dict in repo_dicts:
    names.append(repo_dict['name'])
    plot_dict = {
        'value': repo_dict['stargazers_count'],
        'label': str(repo_dict['description']),
        'xlink': repo_dict['html_url']
        }
    plot_dicts.append(plot_dict)

# 可视化
my_style = LS('#333366', base_style=LCS)

my_config = pygal.Config()
my_config.x_label_rotation = 45
my_config.show_legend = False
my_config.title_font_size = 24
my_config.label_font_size = 14
my_config.major_label_font_size = 18
my_config.truncate_label = 15
my_config.show_y_guides = False
my_config.width = 1000

chart = pygal.Bar(my_config, style=my_style)
chart.title = 'Most-Starred Python Projects on GitHub'
chart.x_labels = names

chart.add('', plot_dicts)
chart.render_in_browser()


